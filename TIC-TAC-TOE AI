import random

board = [" " for _ in range(9)]


def print_board(board):
    print(f"{board[0]} | {board[1]} | {board[2]}")
    print("- | - | -")
    print(f"{board[3]} | {board[4]} | {board[5]}")
    print("- | - | -")
    print(f"{board[6]} | {board[7]} | {board[8]}")


def check_win(board, player):
    win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6)]
    for condition in win_conditions:
        if all(board[i] == player for i in condition):
            return True
    return False


def is_full(board):
    return " " not in board


def player_move():
    while True:
        move = int(input("Enter your move (1-9): "))-1
        if 0 <= move < 9 and board[move] == " ":
            board[move] = "X"
            break
        else:
            print("Invalid move. Try again.")


def minimax(board, depth, maximizing, alpha, beta):
    if check_win(board, "X"):
        return -1
    if check_win(board, "O"):
        return 1
    if is_full(board):
        return 0

    if maximizing:
        max_eval = float("-inf")
        for i in range(9):
            if board[i] == " ":
                board[i] = "O"
                eval = minimax(board, depth + 1, False, alpha, beta)
                board[i] = " "
                max_eval = max(max_eval, eval)
                alpha = max(alpha, eval)
                if beta <= alpha:
                    break
        return max_eval
    else:
        min_eval = float("inf")
        for i in range(9):
            if board[i] == " ":
                board[i] = "X"
                eval = minimax(board, depth + 1, True, alpha, beta)
                board[i] = " "
                min_eval = min(min_eval, eval)
                beta = min(beta, eval)
                if beta <= alpha:
                    break
        return min_eval

def ai_move():
    best_move = -1
    best_eval = float("-inf")
    alpha = float("-inf")
    beta = float("inf")
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            eval = minimax(board, 0, False, alpha, beta)
            board[i] = " "
            if eval > best_eval:
                best_eval = eval
                best_move = i
            alpha = max(alpha, eval)
    if best_move != -1:
        board[best_move] = "O"


while True:
    print_board(board)
    if is_full(board):
        print("It's a draw!")
        break

    player_move()
    if check_win(board, "X"):
        print_board(board)
        print("You win!")
        break

    ai_move()
    if check_win(board, "O"):
        print_board(board)
        print("AI wins!")
        break
